{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","phonesIds","detailsArray","body","document","phonesWithDetails","onSuccess","phoneName","insertAdjacentHTML","onError","message","style","flexDirection","request","url","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","getPhones","getPhonesDetails","detailUrl","phones","result","phone","push","id","name","phonesId","detail","catch","error","Object","assign","setTimeout"],"mappings":"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","file":"main.30f50d16.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst baseUrl = 'https://mate-academy.github.io/phone-catalogue-static/api';\nconst phonesIds = [];\nconst detailsArray = [];\nconst body = document.body;\nconst phonesWithDetails = [];\n\nbody.style.flexDirection = 'column';\n\nfunction onSuccess(phoneName) {\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"name\">\n      ${phoneName}\n    </div>\n  `);\n}\n\nfunction onError(message) {\n  body.insertAdjacentHTML('beforeend', `\n    <div class=\"warning\">\n      ${message}\n    </div>\n  `);\n}\n\nconst request = (url) => {\n  return fetch(`${baseUrl}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`)\n        );\n      }\n\n      return response.json();\n    });\n};\n\nconst getPhones = () => {\n  return request('/phones.json');\n};\n\nconst getPhonesDetails = (detailUrl) => {\n  return request(`/phones/${detailUrl}.json`);\n};\n\ngetPhones()\n  .then(phones => phones)\n  .then(result => {\n    for (const phone of result) {\n      phonesIds.push(phone.id);\n      onSuccess(phone.name);\n      phonesWithDetails.push(phone);\n    }\n  })\n  .then(phonesId => {\n    for (const id of phonesIds) {\n      getPhonesDetails(id)\n        .then(detail => detailsArray.push(detail))\n        .catch(error => error);\n    }\n\n    for (const phone of phonesWithDetails) {\n      getPhonesDetails(phone.id)\n        .then(detail => {\n          Object.assign(phone, detail);\n        })\n        .catch(onError);\n    }\n  })\n  .catch(error => {\n    setTimeout(() => {\n      onError(error);\n    }, 5000);\n  });\n"]}